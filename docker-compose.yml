version: "3.9"
services:
  db:
    image: pgvector/pgvector:pg16
    container_name: facelog-db
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=face
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 20
  api:
    build:
      context: .
      dockerfile: server/Dockerfile
    container_name: facelog-api
    environment:
      - HOST=0.0.0.0
      - PORT=8000
      - RECOGNITION_THRESHOLD=0.45
      - EMBEDDING_BACKEND=insightface
      - INSIGHT_STRICT=true
      - LOG_LEVEL=INFO
      - ENABLE_AUTH=false
      - DB_DSN=postgresql://postgres:postgres@db:5432/face
      - EMBEDDING_DIM=512
      - CORS_ALLOWED_ORIGINS=http://127.0.0.1:3000,http://localhost:3000
    ports:
      - "127.0.0.1:8001:8000"
    volumes:
      - storage_data:/app/server/storage
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  proxy:
    image: nginx:1.27-alpine
    container_name: facelog-proxy
    profiles: ["obs"]
    ports:
      - "8088:80"
      - "8443:443"
    volumes:
      - ./nginx/app.conf:/etc/nginx/conf.d/app.conf:ro,Z
      - ./nginx/ssl.conf:/etc/nginx/conf.d/ssl.conf:ro,Z
      - ./nginx/certs:/etc/nginx/certs:ro,Z
    depends_on:
      api:
        condition: service_started
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: facelog-prometheus
    profiles: ["obs"]
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro,Z
    depends_on:
      api:
        condition: service_started
    restart: unless-stopped

  grafana:
    image: grafana/grafana:11.3.0
    container_name: facelog-grafana
    profiles: ["obs"]
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources:ro,Z
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro,Z
      - ./grafana/dashboards:/etc/grafana/dashboards:ro,Z
    depends_on:
      prometheus:
        condition: service_started
    restart: unless-stopped

  db-backup:
    image: postgres:16-alpine
    container_name: facelog-db-backup
    profiles: ["obs"]
    environment:
      - PGHOST=db
      - PGUSER=postgres
      - PGPASSWORD=postgres
      - RETENTION_DAYS=7
    volumes:
      - ./scripts/cron_backup.sh:/cron_backup.sh:ro,Z
      - ./backups:/backups:rw,Z
    entrypoint: ["sh", "-c", "echo '0 2 * * * /cron_backup.sh' > /etc/crontabs/root && crond -f -d 8"]
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
volumes:
  db_data:
  storage_data:


